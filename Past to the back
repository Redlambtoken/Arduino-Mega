#include <LiquidCrystal.h>
#include <Key.h>
#include <Keypad.h>

int iplant1 = -1;
int iplant2 = -1;
int hauteur = 0;
int vie = 3;
int ivie = 0;
int score = -20;
int palier = 100;
unsigned long reset = 0;
long intervalle = 500; 
unsigned long reset_saut = 0;
long intervalle_saut = 1000;

byte Run_Man[8] = {
B01100,
B01100,
B00000,
B01111,
B11110,
B01110,
B11010,
B10011,
};
byte Static_Man[8] = {
B01100,
B01100,
B00000,
B01100,
B01111,
B01110,
B01110,
B01111,
};
byte Flower[8]{
B01110,
B11111,
B11111,
B01110,
B00100,
B10101,
B11111,
B00100,
};
byte Run_Man_Mirror[8] = {
B01100,
B01100,
B00000,
B11110,
B01111,
B01110,
B01011,
B11001,
};
byte Static_Man_Mirror[8] = {
B00110,
B00110,
B00000,
B00110,
B11110,
B01110,
B01110,
B11110,
};
byte Life[8] = { //j'ai fais un byte de 7 pour que ça soit centré, à tester si ça marche
B00000,
B01010,
B11111,
B11111,
B01110,
B00100,
B00000,
B00000,
};

int i = 1;
const byte rows = 4;
const byte cols = 3;
char keys[rows][cols] = {{'1','2','3'}, {'4','5','6'}, {'7','8','9'}, {'*','0','#'}};
byte rowPins[rows] = {25,26,27,28};
byte colPins[cols] = {22,23,24};
Keypad clavier = Keypad(makeKeymap(keys), rowPins, colPins, rows, cols);
LiquidCrystal lcd(8, 9, 2, 3, 5, 6);

void setup(){
  Serial.begin(9600);
  lcd.begin(16, 2);
  lcd.createChar(1, Run_Man);
  lcd.createChar(2, Static_Man);
  lcd.createChar(3, Flower);
  lcd.createChar(4, Run_Man_Mirror);
  lcd.createChar(5, Static_Man_Mirror);
  lcd.createChar(6,Life);
  lcd.setCursor(0, 1);
  lcd.print(char(2));
}

void loop() {
  if (vie <= 0){
    lcd.clear();
    lcd.setCursor(3,0);
    lcd.print("Game Over");    
    lcd.setCursor(4,1);
    lcd.print("Score : ");
    lcd.setCursor(12,1);
    lcd.print(score);
    delay(5000);
    lcd.clear();
    score = -20;
    vie = 3;
    iplant1 = -1;
    iplant2 = -1;
    i = 0;
    ivie = 0;
    hauteur = 0;
    intervalle = 500; 
    intervalle_saut = 1000;
    lcd.setCursor(0, 1);
    lcd.print(char(2));
  }  

  for (vie > 0; ivie < vie; ivie++){
    lcd.setCursor(ivie,0);
    lcd.print(char(6));
  }
  
  if (ivie == vie){
    lcd.setCursor(ivie,0);
    lcd.write(0xFE);
    ivie =0;
  }

  if (iplant1 == -1){
    score = score + 10;
    iplant1  = random(16,25);
    while (iplant1 + 1 == iplant2 || iplant1 - 1 == iplant2){
      iplant1 = random(16,25);
    }
  }
  if (iplant2 == -1){
    score = score + 10;
    iplant2  = random(16,25);
    while (iplant2 + 1 == iplant1 || iplant2 - 1 == iplant1){
      iplant2=random(16,25);
    }
  }

    lcd.setCursor(12,0);
    lcd.print(score);
    lcd.setCursor(iplant1, 1);
    lcd.print(char(3));
    lcd.setCursor(iplant2, 1);
    lcd.print(char(3));
  

  char touche = clavier.getKey();

  if (touche == '6' && i % 2 == 1 && hauteur == 0){
    lcd.setCursor(i - 1, 1);
    lcd.write(0xFE);
    lcd.setCursor(i, 1);
    lcd.print(char(1));
    i = i + 1;
  }
  else if (touche == '6' && i % 2 == 0 && hauteur == 0){
    lcd.setCursor(i - 1, 1);
    lcd.write(0xFE);
    lcd.setCursor(i, 1);
    lcd.print(char(2));
    i = i + 1;
  }
  else if (touche == '4' && i % 2 == 0 && hauteur == 0 && i != 1){
    lcd.setCursor(i, 1);
    lcd.write(0xFE);
    lcd.setCursor(i - 1, 1);
    lcd.write(0xFE);
    lcd.setCursor(i - 2, 1);
    lcd.print(char(4));
    i = i - 1;
  }
  else if (touche == '4' && i % 2 == 1 && hauteur == 0 && i!= 1){
    lcd.setCursor(i, 1);
    lcd.write(0xFE);
    lcd.setCursor(i - 1, 1);
    lcd.write(0xFE);
    lcd.setCursor(i - 2, 1);
    lcd.print(char(5));
    i = i - 1;
  }

  else if (hauteur == 1 && millis() - reset_saut >= intervalle_saut){
    lcd.setCursor(i - 1, 0);
    lcd.write(0xFE);
    lcd.setCursor(i - 1, 1);
    hauteur = 0;
    if (i % 2 == 0){
      lcd.print(char(1));
    }
    else {
      lcd.print(char(2));
    }    
  }

  else if (touche =='2' && hauteur == 0){
    reset_saut = millis();
    lcd.setCursor(i - 1, 1);
    lcd.write(0xFE);
    lcd.setCursor(i - 1, 0);
    lcd.print(char(1));
    hauteur = 1;
  }

  if (i > 16){
    lcd.clear();
    lcd.setCursor(0, 1);
    lcd.print(char(2));
    i = 1;
  }

  if (score >= palier && palier > 50){
    palier = palier + 100;
    intervalle = intervalle - 25;
    intervalle_saut = intervalle_saut - 50;
  }

  if (millis() - reset >= intervalle){
    reset = millis();
    iplant1 = iplant1 - 1;
    iplant2 = iplant2 - 1;
    lcd.setCursor(iplant1 + 1, 1);
    lcd.write(0xFE);
    lcd.setCursor(iplant2 + 1, 1);
    lcd.write(0xFE);
  }

  if (i - 1 == iplant1 && hauteur == 0){
      vie = vie - 1;
      iplant1  = random(16,25);
      lcd.setCursor(i - 1, 1);
      lcd.print(char(2));
        while (iplant1 + 1 == iplant2 || iplant1 -1 == iplant2){
        iplant1=random(16,25);
        }
    }

  if (i - 1 == iplant2 && hauteur == 0){
    vie = vie - 1;
    iplant2  = random(16,25);
    lcd.setCursor(i - 1, 1);
    lcd.print(char(2));
      while (iplant2 + 1 == iplant1 || iplant2 - 1 == iplant1){
      iplant1=random(16,25);
    }
  }
}
